{"version":3,"sources":["reducers/productsReducer.js","reducers/cartReducer.js","reducers/filterReducer.js","reducers/index.js","store/index.js","actions/productActions.js","actions/cartActions.js","components/Product.js","components/Dashboard.js","components/CartProduct.js","components/MyCart.js","components/Size.js","components/Filter.js","actions/filterActions.js","App.js","serviceWorker.js","index.js"],"names":["initialState","loading","products","cart","totalPrice","totalQuantity","sizes","combineReducers","productsReducer","state","action","type","payload","cartReducer","index","length","sku","quantity","price","filter","product","filterReducer","indexOf","size","createStore","rootReducer","applyMiddleware","ReduxThunk","TOGGLE_LOADING","ADD_ITEM","item","memo","connect","dispatch","addItem","title","style","className","alt","src","onClick","Dashboard","getProducts","props","toggleLoading","availableSizes","some","v","map","key","this","setInitialProducts","Component","ownProps","a","async","axios","get","data","substractItem","SUBTRACT_ITEM","deleteItem","DELETE_ITEM","disabled","id","document","getElementById","classList","toggle","toFixed","handleSizeChoose","chosen","allSizes","addSize","ADD_SIZE","App","store","subscribe","console","log","getState","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a7c4c767.chunk.js","sourcesContent":["const initialState = {\n  loading: true,\n  products: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_PRODUCTS\":\n      return {\n        loading: !state.loading,\n        products: action.payload\n      };\n    case \"TOGGLE_LOADING\":\n      return {\n        ...state,\n        loading: !state.loading\n      };\n    default:\n      return state;\n  }\n};\n","const initialState = {\n  cart: [],\n  totalPrice: 0,\n  totalQuantity: 0\n};\n\nexport default (state = initialState, action) => {\n  let cart = [...state.cart];\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      for (let index = 0; index < cart.length; index++) {\n        if (cart[index].sku === action.payload.sku) {\n          cart[index].quantity = cart[index].quantity + 1;\n          return {\n            cart,\n            totalPrice: state.totalPrice + cart[index].price,\n            totalQuantity: state.totalQuantity + 1\n          };\n        }\n      }\n      return {\n        cart: [...state.cart, { ...action.payload, quantity: 1 }],\n        totalPrice: state.totalPrice + action.payload.price,\n        totalQuantity: state.totalQuantity + 1\n      };\n    case \"SUBTRACT_ITEM\":\n      for (let index = 0; index < cart.length; index++) {\n        if (cart[index].sku === action.payload) {\n          cart[index].quantity = cart[index].quantity - 1;\n          return {\n            cart: cart,\n            totalPrice: state.totalPrice - cart[index].price,\n            totalQuantity: state.totalQuantity - 1\n          };\n        }\n      }\n      break;\n    case \"DELETE_ITEM\":\n      return {\n        totalPrice:\n          state.totalPrice - action.payload.price * action.payload.quantity,\n        cart: cart.filter(product => product.sku !== action.payload.sku),\n        totalQuantity: state.totalQuantity - action.payload.quantity\n      };\n    default:\n      return state;\n  }\n};\n","const initialState = {\n  sizes: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_SIZE\":\n      let sizes = [...state.sizes];\n      const index = sizes.indexOf(action.payload);\n      if (index > -1) {\n        sizes = sizes.filter(size => size !== action.payload);\n        return {\n          ...state,\n          sizes\n        };\n      } else {\n        return {\n          ...state,\n          sizes: [...state.sizes, action.payload]\n        };\n      }\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport productsReducer from \"./productsReducer\";\nimport cartReducer from \"./cartReducer\";\nimport filterReducer from \"./filterReducer\";\n\nexport default combineReducers({ productsReducer, cartReducer, filterReducer });\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"../reducers\";\nimport ReduxThunk from \"redux-thunk\";\nexport default createStore(rootReducer, applyMiddleware(ReduxThunk));\n","import axios from \"axios\";\nexport const setProducts = () => {\n  return async dispatch => {\n    const { data } = await axios.get(\"/db\");\n    dispatch({ type: \"SET_PRODUCTS\", payload: data });\n  };\n};\n\nexport const TOGGLE_LOADING = () => {\n  return { type: \"TOGGLE_LOADING\" };\n};\n","export const ADD_ITEM = item => {\n  return { type: \"ADD_ITEM\", payload: item };\n};\n\nexport const SUBTRACT_ITEM = sku => {\n  return { type: \"SUBTRACT_ITEM\", payload: sku };\n};\n\nexport const DELETE_ITEM = item => {\n  return { type: \"DELETE_ITEM\", payload: item };\n};\n","import React, { memo } from \"react\";\nimport { ADD_ITEM } from \"../actions/cartActions\";\nimport { connect } from \"react-redux\";\n\nfunction Product({ sku, title, style, price, addItem }) {\n  const handleOnClick = () => {\n    addItem(ADD_ITEM({ title, style, price, sku }));\n  };\n\n  return (\n    <div className=\"dashboard-product\">\n      <div>\n        <div>\n          <img\n            alt={sku}\n            className=\"product-image\"\n            src={`/images/products/${sku}_1.jpg`}\n          ></img>\n        </div>\n        <h4 className=\"product-title\">{title}</h4>\n        <p>{style}</p>\n        <p>{price} $</p>\n        <button className=\"btn-add\" onClick={handleOnClick}>\n          Add To Shopping Cart\n        </button>\n      </div>\n    </div>\n  );\n}\nconst mapStateToprops = () => ({});\nconst mapDispatchToProps = dispatch => {\n  return { addItem: action => dispatch(action) };\n};\n\nexport default memo(connect(mapStateToprops, mapDispatchToProps)(Product));\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setProducts, TOGGLE_LOADING } from \"../actions/productActions\";\nimport Product from \"./Product\";\nimport \"../App.css\";\nimport \"../styles/loader.css\";\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.setInitialProducts();\n  }\n  getProducts = () => {\n    this.props.toggleLoading();\n    let products = this.props.products.products;\n    let { sizes } = this.props;\n    if (sizes.length) {\n      products = products.filter(product =>\n        product.availableSizes.some(v => {\n          return sizes.indexOf(v) >= 0;\n        })\n      );\n    }\n    this.props.toggleLoading();\n    return products.map(product => (\n      <Product\n        key={product.sku}\n        sku={product.sku}\n        style={product.style}\n        title={product.title}\n        price={product.price}\n      />\n    ));\n  };\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"header\">Shirts Shop</h1>\n        <div className=\"container\">\n          {this.props.loading ? (\n            <div className=\"lds-dual-ring\"></div>\n          ) : (\n            this.getProducts()\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    ...state.productsReducer,\n    ...state.filterReducer,\n    ...ownProps\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setInitialProducts: () => dispatch(setProducts()),\n    toggleLoading: () => {\n      dispatch(TOGGLE_LOADING);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { SUBTRACT_ITEM, ADD_ITEM, DELETE_ITEM } from \"../actions/cartActions\";\nfunction CartProduct({\n  title,\n  price,\n  sku,\n  style,\n  quantity,\n  substractItem,\n  addItem,\n  deleteItem\n}) {\n  const substractProduct = () => {\n    substractItem(sku);\n  };\n\n  const handleAddItem = () => {\n    addItem(sku);\n  };\n\n  const handleDeleteItem = () => {\n    deleteItem({ sku, price, quantity });\n  };\n\n  return (\n    <li key={sku}>\n      <div className=\"cart-product\">\n        <div className=\"image-details\">\n          <img\n            alt={sku}\n            className=\"cart-product-image\"\n            src={`/images/products/${sku}_2.jpg`}\n          ></img>\n          <div className=\"details\">\n            <p>{title}</p>\n            <p>{style}</p>\n            <p className=\"yellow-text\">{price}$</p>\n            <p>Quantity: {quantity}</p>\n          </div>\n        </div>\n        <div className=\"actions-section\">\n          <div className=\"delete\" onClick={handleDeleteItem}>\n            X\n          </div>\n          <div className=\"add-remove\">\n            <button\n              onClick={substractProduct}\n              className={quantity === 1 ? \"disabled\" : \"\"}\n              disabled={quantity > 1 ? false : true}\n            >\n              -\n            </button>\n            <button onClick={handleAddItem}>+</button>\n          </div>\n        </div>\n      </div>\n    </li>\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { ...ownProps };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    substractItem: sku => dispatch(SUBTRACT_ITEM(sku)),\n    addItem: sku => dispatch(ADD_ITEM({ sku })),\n    deleteItem: item => dispatch(DELETE_ITEM(item))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartProduct);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../styles/cart.css\";\nimport CartProduct from \"./CartProduct\";\nfunction MyCart(props) {\n  const handleOnClick = () => {\n    document.getElementById(\"cart\").classList.toggle(\"active\");\n  };\n\n  return (\n    <div>\n      <div id=\"cart\" className=\"cart\">\n        <div className=\"checkout-button\" onClick={handleOnClick}>\n          <img alt=\"cart\" src=\"./images/cart.png\" className=\"cart-icon\" />\n          <span className=\"num-products\">{props.totalQuantity}</span>\n        </div>\n        <div className=\"cart-header\">Your Cart</div>\n        <ul className=\"cart-all-products\">\n          {props.cart.length ? (\n            props.cart.map(product => (\n              <CartProduct\n                key={product.sku}\n                title={product.title}\n                sku={product.sku}\n                price={product.price}\n                quantity={product.quantity}\n                style={product.style}\n              />\n            ))\n          ) : (\n            <div className=\"cart-header\">Add Items To Your Cart</div>\n          )}\n        </ul>\n        <div className=\"cart-header yellow-text\">\n          Total Price: {props.totalPrice.toFixed(1)} $\n        </div>\n        <div className=\"order-button\">Checkout</div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    ...state.cartReducer,\n    ...ownProps\n  };\n};\n\nexport default connect(mapStateToProps)(MyCart);\n","import React, { memo } from \"react\";\n\nfunction Size({ size, handleSizeChoose, chosen }) {\n  const handleClick = () => {\n    handleSizeChoose(size);\n  };\n\n  return (\n    <div className={chosen ? \"size active\" : \"size\"} onClick={handleClick}>\n      {size}\n    </div>\n  );\n}\n\nexport default memo(Size);\n","import React from \"react\";\nimport \"../styles/filter.css\";\nimport { connect } from \"react-redux\";\nimport { ADD_SIZE } from \"../actions/filterActions\";\nimport Size from \"./Size\";\nconst allSizes = [\"XS\", \"S\", \"M\", \"L\", \"XL\", \"XXL\"];\nfunction Filter({ sizes, addSize }) {\n  const handleSizeChoose = size => {\n    addSize(size);\n  };\n\n  return (\n    <div className=\"filters-section\">\n      <div className=\"sizes\">\n        <div className=\"sizes-title\">Sizes</div>\n        <div className=\"sizes-content\">\n          {allSizes.map(size => (\n            <Size\n              key={size}\n              size={size}\n              chosen={sizes.indexOf(size) > -1}\n              handleSizeChoose={handleSizeChoose}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    sizes: [...state.filterReducer.sizes],\n    ...ownProps\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addSize: size => {\n      dispatch(ADD_SIZE(size));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","export const ADD_SIZE = size => {\n  return { type: \"ADD_SIZE\", payload: size };\n};\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport MyCart from \"./components/MyCart\";\nimport Filter from \"./components/Filter\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Filter />\n        <MyCart />\n        <Dashboard />\n      </Provider>\n    );\n  }\n}\n\nstore.subscribe(() => {\n  console.log(store.getState());\n});\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}